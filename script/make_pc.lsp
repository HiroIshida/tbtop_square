(defun make-vase-points (hw-lst)
  (let ((lst-ret nil))
    (dolist (hw hw-lst)
      (let ((h (car hw))
            (w (cdr hw)))
        (push (float-vector w w h) lst-ret)
        (push (float-vector (- w) w h) lst-ret)
        (push (float-vector w (- w) h) lst-ret)
        (push (float-vector (- w) (- w) h) lst-ret)))
    lst-ret))

(setq *vase-pts* (make-vase-points `((0 . 30) (40 . 38) (60 . 41) (80 . 41.5))))
(setq *vase-tmp* (convex-hull-3d *vase-pts*))
(setq *box* (make-cube 80 80 10))
(send *box* :translate #f(0 0 75))
(setq *vase* (body- *vase-tmp* *box*))
(objects *vase*)
